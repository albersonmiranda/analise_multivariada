---
title: Métodos Multivariados de Análise de Dados
subtitle: 3ª Atividade
author: Alberson da Silva Miranda
date: last-modified
date-format: long
lang: pt-BR
thanks: Código disponível em https://github.com/albersonmiranda/analise_multivariada.
toc: true
number-sections: true
sansfont: Liberation Serif
mainfont: Liberation Serif
monofont: Fira Code
monofontoptions:
  - Scale=0.8
highlight-style: zenburn
code-line-numbers: true
format:
  pdf:
    documentclass: scrreprt
    header-includes: 
      - \renewcommand\thesubsection{\alph{subsection}}
---

```{r setup, include=FALSE}
# set seed
set.seed(100)
```

# INTRODUÇÃO

A atividade consiste na análise envoltória de dados considerando as 8 DMUs (_Decision Making Units_) da DEA. Cada DMU tem os seguintes insumos:

- `MP`: Matéria prima;
- `MOD`: Mão de obra direta;

E os seguintes produtos:

- `Produtos`: Quantidades produzidas no mês;
- `Perfeição`: Taxa de produtos sem defeito em %.

Uma DMU é classificada como completamente eficiente se, e somente se, a performance das outras DMUs não mostrarem que algum de seus insumos ou produtos pode ser melhorado sem piorar outro de seus insumos ou produtos, ou seja, se a DMU for Pareto-eficiente.

# ANÁLISE

```{r}
# importando dados
dados <- readxl::read_excel(
  "data-raw/dea/EXERCICIO.xlsx",
  sheet = "Planilha1"
)
print(dados)

# passando dados para o {deaR}
dados_dea <- deaR::make_deadata(
  dados,
  ni = 2,
  no = 2,
  dmus = 1,
  inputs = 2:3,
  outputs = 4:5
)
```

## Modelando a DEA

No modelo orientado a insumo, os insumos dos DMUs eficientes irão permanecer os mesmos, uma vez que já são eficientes. Para os demais, os valores dos insumos são alterados para que eles se tornem eficientes.

Os DMUs eficientes são aqueles que possuem eficiência igual a 1 na saída da função `efficiencies()`. O valores ótimos dos insumos e produtos são obtidos com a função `targets()`.

Considerando retornos constantes de escola, F e H são os DMUs completamente eficientes.

```{r}
# modelo orientado a insumo, crs
crs_insumo <- deaR::model_basic(
  dados_dea,
  # "io" significa "input oriented"
  orientation = "io",
  # rts significa "return to scale". "crs" significa "constant return to scale"
  rts = "crs"
)

deaR::efficiencies(crs_insumo)
deaR::targets(crs_insumo)
```

Já com retornos variáveis, temos C, F, G e H como DMUs completamente eficientes.

```{r}
# modelo orientado a insumo, crs
vrs_insumo <- deaR::model_basic(
  dados_dea,
  # "io" significa "input oriented"
  orientation = "io",
  # rts significa "return to scale". "vrs" significa "variable return to scale"
  rts = "vrs"
)

deaR::efficiencies(vrs_insumo)
deaR::targets(vrs_insumo)
```

No modelo orientado a produto, são os valores dos produtos dos DMUs ineficientes que são alterados para que eles se tornem eficientes.

No modelo orientado a produto, considerando retornos constantes de escola, temos F e H como DMUs completamente eficientes.

```{r}
# modelo orientado a produto, crs
crs_produto <- deaR::model_basic(
  dados_dea,
  # "io" significa "input oriented"
  orientation = "oo",
  # rts significa "return to scale". "crs" significa "constant return to scale"
  rts = "crs"
)

deaR::efficiencies(crs_produto)
deaR::targets(crs_produto)
```

Já com retornos variáveis, temos C, F, G e H como DMUs completamente eficientes.

```{r}
# modelo orientado a produto, crs
vrs_produto <- deaR::model_basic(
  dados_dea,
  # "io" significa "input oriented"
  orientation = "io",
  # rts significa "return to scale". "vrs" significa "variable return to scale"
  rts = "vrs"
)

deaR::efficiencies(vrs_produto)
deaR::targets(vrs_produto)
```